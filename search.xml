<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux 常用命令]]></title>
    <url>%2F2019%2F10%2F01%2FLinux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[常用命令目录1$ pwd 显示当前工作目录的路径 1$ cd &lt;directory&gt; 将当前目录更改为&lt;directory&gt; 1$ cd .. 返回到上级目录 1$ ls 列出当前目录内容 1$ ls -la 列出详细的目录内容，包含隐藏文件 1$ mkdir &lt;directory&gt; 创建名为&lt;directory&gt;的文件夹 输出1$ cat &lt;file&gt; 输出&lt;file&gt;文件中的内容 1$ less &lt;file&gt; 输出&lt;file&gt;文件中的内容，使用less命令（支持分页等。） 1$ haed &lt;file&gt; 输出&lt;file&gt;文件中的前10行的内容 1$ &lt;cmd&gt; &gt; &lt;file&gt; 将&lt;cmd&gt;的输出保存到&lt;file&gt;文件 1$ &lt;cmd&gt; &gt;&gt; &lt;file&gt; 将&lt;cmd&gt;的输出追加到&lt;file&gt;文件 1$ &lt;cmd1&gt; | &lt;cmd2&gt; 将&lt;cmd1&gt;的输出作为&lt;cmd2&gt;的操作对象 1$ clear 清除命令行窗口 文件1$ rm &lt;file&gt; 删除&lt;file&gt;文件 1$ rm -r &lt;directory&gt; 删除&lt;directory&gt;目录 1$ rm -f &lt;file&gt; 强制删除&lt;file&gt;，增加 -r 可以强制删除目录 1$ mv &lt;file-old&gt; &lt;file-new&gt; 重命名&lt;file-old&gt;为&lt;file-new&gt; 1$ mv &lt;file&gt; &lt;directory&gt; 移动&lt;file&gt;文件到&lt;directory&gt;目录（如果目录中已经有这个文件会被覆盖） 1$ cp &lt;file&gt; &lt;directory&gt; 复制&lt;file&gt;文件到&lt;directory&gt;目录（如果目录中已经有这个文件会被覆盖） 1$ cp -r &lt;directory1&gt; &lt;directory2&gt; 复制&lt;directory1&gt;目录到&lt;directory2&gt;目录（可能会覆盖现有目录中的文件） 1$ touch &lt;file&gt; 更改&lt;file&gt;文件的访问和修改时间（如果检测不到这个文件则创建这个文件） 权限1$ chmod 755 &lt;file&gt; 更改&lt;file&gt;文件的权限为755 1$ chmod -R 600 &lt;directory&gt; 更改&lt;directory&gt;文件夹和里面的文件的权限为600 1$ chown &lt;user&gt;:&lt;group&gt; &lt;file&gt; 更改&lt;file&gt;文件的所属用户和用户组（增加 -R 包含目录中的文件） 搜索1$ find &lt;dir&gt; -name "&lt;file&gt;" 在&lt;dir&gt;目录中查找&lt;file&gt;文件（使用通配符[*]搜索文件名的一部分，例如：”file.*“ ) 1$ grep "&lt;text&gt;" &lt;file&gt; 输出&lt;file&gt;文件中所有出现的&lt;text&gt;（添加 -i 表示不区分大小写) 1$ grep -rl "&lt;text&gt;" &lt;dir&gt; 在&lt;dir&gt;目录中搜索所有文件内容为&lt;text&gt; 网络1$ ping &lt;host&gt; Ping &lt;host&gt; 显示状态 1$ whois &lt;domain&gt; 显示域名 &lt;domain&gt; 的信息 1$ curl -o &lt;url/to/file&gt; 下载&lt;file&gt;文件（通过HTTP[S]或FTP） 1$ ssh &lt;username&gt;@&lt;host&gt; 使用&lt;username&gt;建立并通过ssh连接到&lt;host&gt; 1$ scp &lt;file&gt; &lt;username&gt;@&lt;host&gt;:/remote/path 复制&lt;file&gt;到远程&lt;host&gt; 进程1$ ps ax 输出当前正在运行的进程 1$ top 显示当前运行的进程的实时信息 1$ kill &lt;pid&gt; 用&lt;pid&gt;退出进程]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac 权限问题]]></title>
    <url>%2F2019%2F09%2F28%2FMac-%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[Mac 权限问题允许任何来源 开启“允许任何来源”: 1sudo spctl --master-disable 关闭“允许任何来源”: 1sudo spctl --master-enable “通用”里有时没有“任何来源”这个选项时按上面方法解决： 1系统偏好设置 -&gt; 安全性与隐私 -&gt; 通用 -&gt; 选择“任何来源” 处理Rootless 查看Rootless状态csrutil status 如果显示的是System Integrity Protection status: enabled.则表示已开启。如果显示的是System Integrity Protection status: disabled.则表示没有开启。 关闭Rootless重启Mac，在听到经典的启动声后，按下command+R进入恢复模式，在菜单栏中实用工具找到终端(Terminal)，输入如下指令csrutil disable; reboot 电脑会重新启动，进入系统后可以使用查看方法查看是否关闭成功。 开启Rootless重启Mac，在听到经典的启动声后，按下command+R进入恢复模式，在菜单栏中实用工具找到终端(Terminal)，输入如下指令csrutil enable; reboot 电脑会重新启动，进入系统后可以使用查看方法查看是否开启成功。]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 默认端口]]></title>
    <url>%2F2019%2F09%2F26%2FLinux-%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3%2F</url>
    <content type="text"><![CDATA[默认端口 22：SSH（安全登录）、SCP（文件传输）、端口号重定向 21：FTP（文件传输）协议代理服务器常用端口 39000/40000：FTP被动模式常用端口 80/8080/3128/8081/9098：HTTP协议代理服务器常用端口号 1080：SOCKS代理协议服务器常用端口号 23：Telnet（不安全的文本传送） 69(udp)：TFTP（Trivial File Transfer Protocol） 25：SMTP Simple Mail Transfer Protocol（E-mail），默认端口号 110：POP3 Post Office Protocol（E-mail） 9080：Webshpere应用程序 9090：Webshpere管理工具 3389：Windows RDP远程登录 1521：Oracle数据库 3306：MySQL 11211：MEMCACHED 5432：PostgreSQL 1433：MS SQL 6379：Redis 8888：宝塔面板初始端口 888：宝塔面板phpmysql端口]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows 镜像下载]]></title>
    <url>%2F2019%2F09%2F19%2FWindows-%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[镜像下载 Windows 10 Windows 10 (business editions), version 1903 (updated Aug 2019) (x64) - DVD (Chinese-Simplified) 文件名 cn_windows_10_business_editions_version_1903_updated_aug_2019_x64_dvd_3760ef19.iso SHA1 4846448F90F6DE70F054A2E1E24BE45C7BF9DC33 文件大小 4.85GB 发布时间 2019-08-21 ed2k://|file|cn_windows_10_business_editions_version_1903_updated_aug_2019_x64_dvd_3760ef19.iso|5205960704|9778A975BE33943A8F09B4D0D44848EC|/ Windows 7 Windows 7 Ultimate with Service Pack 1 (x64) - DVD (Chinese-Simplified) 文件名 cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso SHA1 2CE0B2DB34D76ED3F697CE148CB7594432405E23 文件大小 3.19GB 发布时间 2011-05-12 ed2k://|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/ Windows XP Windows XP Professional with Service Pack 3 (x86) - CD (Chinese-Simplified) 文件名 zh-hans_windows_xp_professional_with_service_pack_3_x86_cd_x14-80404.iso SHA1 69DBF131116760932DCF132ADE111D6B45778098 文件大小 601.04MB 发布时间 2008-05-01 ed2k://|file|zh-hans_windows_xp_professional_with_service_pack_3_x86_cd_x14-80404.iso|630239232|CD0900AFA058ACB6345761969CBCBFF4|/]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 环境变量]]></title>
    <url>%2F2019%2F09%2F09%2FLinux-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%2F</url>
    <content type="text"><![CDATA[环境变量什么是环境变量呢？简要的说，就是指定一个目录，运行软件的时候，相关的程序将会按照该目录寻找相关文件。 在Linux系统下，如果你下载并安装了应用程序，很有可能在键入它的名称时出现“command not found”的提示内容。如果每次都到安装目标文件夹内，找到可执行文件来进行操作就太繁琐了。这涉及到环境变量 PATH 的设置问题。 方法一控制台中直接设置，不赞成使用这种方法，因为换个Shell，你的设置就无效了，因此这种方法仅仅是临时使用，以后要使用的时候又要重新设置，比较麻烦。 这个只针对特定的Shell： 1$ PATH="$PATH:/my_new_path" （关闭Shell，会还原PATH） 方法二修改/etc/profile文件，如果你的计算机仅仅作为开发使用时推荐使用这种方法，因为所有用户的Shell都有权使用这些环境变量，可能会给系统带来安全性问题。 这里是针对所有的用户的，所有的Shell； 1$ vi /etc/profile 在里面加入: 1export PATH=&quot;$PATH:/my_new_path&quot; 使用source命令使修改立刻生效： 1$ source /etc/profile 方法三修改.bashrc文件，这种方法更为安全，它可以把使用这些环境变量的权限控制到用户级别，这里是针对某一个特定的用户，如果你需要给某个用户权限使用这些环境变量，你只需要修改其个人用户主目录下的.bashrc文件就可以了。 1$ vi /root/.bashrc 在里面加入： 1export PATH=&quot;$PATH:/my_new_path&quot; 使用source命令使修改立刻生效： 1$ source /root/.bashrc 查看效果最后可以通过echo命令测试一下： 1$ echo $PATH 友情提示后面两种方法一般需要重新注销系统才能生效，也可以使用source命令，使修改的配置立刻生效。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
